import streamlit as st
import interface_connexion as connexion  # Importer l'interface pour la connexion/utilisateur
import interface_film as film  # Importer l'interface pour les films

# Initialiser st.session_state si ce n'est pas d√©j√† fait
if 'logged_in' not in st.session_state:
    st.session_state['logged_in'] = False
    st.session_state['user'] = None

# Interface principale avec menu de navigation d√©roulant dans la barre lat√©rale
def main():
    # Cr√©er un menu de navigation dans la barre lat√©rale
    st.sidebar.title("Navigation")
    
    # D√©finir les options du menu en fonction de l'√©tat de connexion
    if st.session_state['logged_in']:
        options = ("Accueil", "Recherche de Films")
        default_index = 1  # "Recherche de Films" sera s√©lectionn√© par d√©faut
    else:
        options = ("Accueil", "Se connecter", "Cr√©er un compte")
        default_index = 0  # "Accueil" sera s√©lectionn√© par d√©faut
    
    # Cr√©er le selectbox avec l'index par d√©faut
    option = st.sidebar.selectbox("Choisissez une page :", options, index=default_index)
    
    # Affichage des pages selon le choix fait dans le menu de navigation
    if option == "Accueil":
        # Page d'accueil g√©n√©rale de l'application
        st.title("Bienvenue sur notre application üé¨")
        if st.session_state['logged_in'] and st.session_state['user']:
            pseudo = st.session_state['user']['pseudo'] if isinstance(st.session_state['user'], dict) else st.session_state['user']
            st.write(f"Bonjour, {pseudo} !")
            st.markdown("""
                Vous √™tes connect√©. Vous pouvez :
                - Rechercher et afficher des informations sur des films.
            """)
        else:
            st.markdown("""
                Cette application vous permet de :
                - Cr√©er un compte ou vous connecter.
                - Rechercher et afficher des informations sur des films.
                Utilisez le menu de navigation √† gauche pour commencer.
            """)
    
    elif option == "Se connecter":
        connexion.page_connexion()  # Appelle la fonction `page_connexion` d'interface_connexion.py
    
    elif option == "Cr√©er un compte":
        connexion.page_creation_compte_wrapper()  # Appelle la fonction `page_creation_compte_wrapper` d'interface_connexion.py
    
    elif option == "Recherche de Films":
        if st.session_state['logged_in']:
            film.page()  # Appelle la fonction `page` d'interface_film.py
        else:
            st.warning("Veuillez vous connecter pour acc√©der √† cette section.")
            connexion.page_connexion()
    
    # Ajouter un bouton de d√©connexion dans la barre lat√©rale si l'utilisateur est connect√©
    if st.session_state['logged_in']:
        if st.sidebar.button("D√©connexion"):
            # R√©initialiser l'√©tat de connexion
            st.session_state['logged_in'] = False
            st.session_state['user'] = None
            
            # R√©initialiser les recherches
            st.session_state.pop('search_query', None)
            st.session_state.pop('search_results', None)
    
            st.sidebar.success("D√©connect√© avec succ√®s.")
    
            # Recharger l'application pour rediriger vers l'accueil
            st.rerun()
    
    # Optionnel : Afficher l'√©tat de la session pour le d√©bogage
    st.sidebar.markdown("---")
    st.sidebar.write("**√âtat de la Session:**")
    st.sidebar.write(f"Connect√© : {st.session_state['logged_in']}")
    st.sidebar.write(f"Utilisateur : {st.session_state['user']}")

if __name__ == "__main__":
    main()
